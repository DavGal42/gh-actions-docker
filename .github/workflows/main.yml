name: CI/CD Task

on:
  pull_request:
    branches:
      - main
  
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4  
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Run tests with pytest
        run: |
          pip install pytest
          pytest test.py
      
      - name: Send Telegram message on failure
        if: failure()
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="❌Tests failed❌"

  build:
      runs-on: ubuntu-latest  

      if: github.event_name == 'pull_request' && contains(github.event.pull_request.title, 'release candidate')

      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/python_app:1.0.0 .

      - name: Push the Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/python_app:1.0.0


  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Pull the Docker image from Docker Hub
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/python_app:1.0.0

      - name: Run the Docker container for 60 seconds
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/python_app:1.0.0 sleep 60